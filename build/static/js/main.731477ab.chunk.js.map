{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["monday","mondaySdk","errorMessages","default","text","explanation","unauthorized","bad_request","no_org_slug","form_not_filled","no_results","workflow_not_found","project_not_found","possibleErrors","App","props","state","settings","name","expected_results","fetched_results","errorMessageEnabled","errorMessage","errorExplanation","welcomeMessageEnabled","projects","project_name","workflow_name","errorFlipped","theme","edit_mode","loading","flipCard","bind","selectProject","saveSelectedProject","selectWorkflow","saveSelectedWorkflow","stopLoading","displayMessage","listen","res","setState","data","this","interval","setInterval","e","preventDefault","prevState","selectedProject","selectedWorkflow","enabled","message","from_list","vcs_provider","organization_name","length","prevProps","settingsComplete","fetch","circleci_api_token","headers","then","status","json","items","pipelines","pipeline","getWorkflow","setTimeout","catch","console","log","id","item","project_slug","push","className","React","Component","WelcomeMessage","options","max","src","ErrorMessage","isFlipped","onClick","alt","StatusBadge","configEnabled","configType","workflows","get_workflows","displayConfig","setProject","setWorkflow","getStatus","storage","instance","setItem","Object","keys","workflow_list","check_list","workflow_keys","workflow","includes","error","getItem","value","type","project","undefined","find","edit_project","edit_workflow","ProjectConfig","map","toString","split","pop","WorkflowConfig","Badge","onMouseLeave","color","highlightColor","width","icon","StatusIcon","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qZAOMA,E,MAASC,KAETC,EAAgB,CAClBC,QAAS,CAACC,KAAM,8CAA+CC,YAAa,IAC5EC,aAAc,CAACF,KAAM,iEAAkEC,YAAa,+LACpGE,YAAa,CAACH,KAAM,yBAA0BC,YAAa,IAC3DG,YAAa,CAACJ,KAAM,kEAAmEC,YAAa,IACpGI,gBAAiB,CAACL,KAAM,4BAA6BC,YAAa,gEAClEK,WAAY,CAACN,KAAM,kCAAmCC,YAAa,4HACnEM,mBAAoB,CAACP,KAAM,2DAA4DC,YAAa,IACpGO,kBAAmB,CAACR,KAAM,0DAA2DC,YAAa,KAGhGQ,EAAiB,CACnB,yBAA0B,iEAC1B,yBAA0B,gEAGxBC,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACTC,SAAU,GACVC,KAAM,GACNC,iBAAkB,EAClBC,gBAAiB,EACjBC,qBAAqB,EACrBC,aAAc,GACdC,iBAAkB,GAClBC,uBAAuB,EACvBC,SAAU,GACVC,aAAc,GACdC,cAAe,GACfC,cAAc,EACdC,MAAO,QACPC,WAAW,EACXC,SAAS,GAGb,EAAKC,SAAW,EAAKA,SAASC,KAAd,gBAChB,EAAKC,cAAgB,EAAKA,cAAcD,KAAnB,gBACrB,EAAKE,oBAAsB,EAAKA,oBAAoBF,KAAzB,gBAC3B,EAAKG,eAAiB,EAAKA,eAAeH,KAApB,gBACtB,EAAKI,qBAAuB,EAAKA,qBAAqBJ,KAA1B,gBAC5B,EAAKK,YAAc,EAAKA,YAAYL,KAAjB,gBACnB,EAAKM,eAAiB,EAAKA,eAAeN,KAApB,gBA3BP,E,gEA8BE,IAAD,OAChBjC,EAAOwC,OAAO,YAAY,SAAAC,GACtB,EAAKC,SAAS,CAACzB,SAAUwB,EAAIE,KAAMZ,SAAS,OAKhDa,KAAKC,SAAWC,aAAY,WACA,UAArB,EAAK9B,MAAMa,MACV,EAAKa,SAAS,CAAEb,MAAO,SAEvB,EAAKa,SAAS,CAAEb,MAAO,YAE5B,O,+BAGEkB,GACLA,EAAEC,iBACFJ,KAAKF,UAAS,SAAAO,GAAS,MAAK,CAAErB,cAAeqB,EAAUrB,mB,oCAG7CsB,GACPN,KAAK5B,MAAMkC,kBAAoBA,EAC9BN,KAAKF,SAAS,CAAEQ,gBAAiBA,IAEjCN,KAAKF,SAAS,CAAEQ,gBAAiB,O,0CAIrBf,GAChBS,KAAKF,SAAS,CAAEP,oBAAqBA,M,qCAG1BgB,GACRP,KAAK5B,MAAMmC,mBAAqBA,EAC/BP,KAAKF,SAAS,CAAES,iBAAkBA,IAElCP,KAAKF,SAAS,CAAES,iBAAkB,O,2CAIrBd,GACjBO,KAAKF,SAAS,CAAEL,qBAAsBA,M,qCAG3Be,GAA6C,IAApCC,EAAmC,uDAA3B,UAAWC,IAAgB,yDACxC,YAAZD,EACCT,KAAKF,SAAS,CAAElB,sBAAuB4B,IAEpCE,EACCV,KAAKF,SAAS,CAACrB,oBAAqB+B,EAAS9B,aAAcpB,EAAcmD,GAAd,KAAgC9B,iBAAkBrB,EAAcmD,GAAd,cAE7GT,KAAKF,SAAS,CAACrB,oBAAqB+B,EAAS9B,aAAc+B,EAAS9B,iBAAkB,KAG1F6B,GACAR,KAAKF,SAAS,CAAEd,cAAc,EAAOJ,sBAAuB4B,M,oCAKhER,KAAKF,SAAS,CAAEX,SAAS,M,yCAIzB,OAAwC,OAArCa,KAAK5B,MAAMC,SAASsC,cAA0E,IAAjDX,KAAK5B,MAAMC,SAASuC,kBAAkBC,S,yCAOvEC,EAAWT,GAAY,IAAD,OACjCL,KAAK5B,MAAMG,mBAAqB8B,EAAU9B,kBAAoByB,KAAK5B,MAAMI,kBAAoB6B,EAAU7B,iBAAoBwB,KAAK5B,MAAMG,mBAAqByB,KAAK5B,MAAMI,iBACtKwB,KAAKN,cAENW,EAAUhC,WAAa2B,KAAK5B,MAAMC,WAC9B2B,KAAKe,mBACJC,MAAM,qDAAqDhB,KAAK5B,MAAMC,SAAS4C,mBAAmB,aAAajB,KAAK5B,MAAMC,SAASsC,aAAa,IAAIX,KAAK5B,MAAMC,SAASuC,kBAAmB,CACvLM,QAAS,CACL,OAAU,sBAGbC,MAAK,SAAAtB,GAIF,OAHkB,MAAfA,EAAIuB,QACH,EAAKzB,gBAAe,EAAM,gBAEvBE,EAAIwB,UAEdF,MAAK,SAACpB,GACH,GAAGA,EAAKU,WAAWxC,EACf,EAAK0B,gBAAe,EAAM1B,EAAe8B,EAAKU,UAAU,QAExD,GAAGV,EAAKuB,MAAMT,OAAS,EAAG,CACtB,IAAIU,EAAYxB,EAAKuB,MAErB,IAAI,IAAIE,KADR,EAAK1B,SAAS,CAAEvB,iBAAkBgD,EAAUV,OAAQhC,SAAU,KAC1C0C,EAChB,EAAKE,YAAYF,EAAUC,IAE/B,EAAK7B,gBAAe,QAEpB,EAAKA,gBAAe,EAAM,cACtB,EAAKvB,MAAMY,cACX0C,YAAW,WACP,EAAK5B,SAAS,CAAEd,cAAc,MAC/B,QAKlB2C,MAAMC,QAAQC,KAEnB7B,KAAKL,gBAAe,EAAM,c,kCAK1B6B,GAAW,IAAD,OAClBR,MAAM,wCAAwCQ,EAASM,GAAG,0BAA0B9B,KAAK5B,MAAMC,SAAS4C,mBAAmB,aAAajB,KAAK5B,MAAMC,SAASsC,aAAa,IAAIX,KAAK5B,MAAMC,SAASuC,kBAAmB,CAChNM,QAAS,CACL,OAAU,sBAGbC,MAAK,SAAAtB,GACF,OAAOA,EAAIwB,UAEdF,MAAK,SAACpB,GACH,IAAIlB,EAAW,EAAKT,MAAMS,SAI1B,IAAI,IAAIkD,KAHJlD,EAAS2C,EAASQ,gBAClBnD,EAAS2C,EAASQ,cAAgB,IAEtBjC,EAAKuB,MACjBzC,EAAS2C,EAASQ,cAAcC,KAAKlC,EAAKuB,MAAMS,IAEpD,EAAKjC,SAAS,CAACjB,SAAUA,EAAUL,gBAAiB,EAAKJ,MAAMI,gBAAkB,OAEpFmD,MAAMC,QAAQC,O,+BAInB,OAAG7B,KAAK5B,MAAMQ,sBACH,yBAAKsD,UAAU,OAClB,kBAAC,EAAD,CAAgBjD,MAAOe,KAAK5B,MAAMa,SAEhCe,KAAK5B,MAAMK,oBACV,yBAAKyD,UAAU,OAAM,kBAAC,EAAD,CAAczB,QAAST,KAAK5B,MAAMM,aAAcjB,YAAauC,KAAK5B,MAAMO,iBAAkBK,aAAcgB,KAAK5B,MAAMY,aAAcI,SAAUY,KAAKZ,SAAUH,MAAOe,KAAK5B,MAAMa,SAEjM,yBAAKiD,UAAU,OAAM,kBAAC,EAAD,CAAa7D,SAAU2B,KAAK5B,MAAMC,SAAUS,aAAckB,KAAK5B,MAAMU,aAAcC,cAAeiB,KAAK5B,MAAMW,cAAeF,SAAUmB,KAAK5B,MAAMS,SAAUI,MAAOe,KAAK5B,MAAMa,MAAOC,UAAWc,KAAK5B,MAAMc,UAAWC,QAASa,KAAK5B,MAAMe,QAASO,YAAaM,KAAKN,mB,GAlL1RyC,IAAMC,WAuLlBC,E,uKAEE,OAAO,kBAAC,IAAD,CAAMH,UAAgC,SAArBlC,KAAK7B,MAAMc,MAAmB,YAAc,GAAIqD,QAAS,CAAEC,IAAK,KACpF,yBAAKL,UAAU,2BACf,uBAAGA,UAAU,iBAAb,mBACA,yBAAKA,UAAU,gBAAgBM,IAAK,kBAAyC,SAArBxC,KAAK7B,MAAMc,MAAmB,QAAU,IAAM,SACtG,yBAAKiD,UAAU,sCAAsCM,IAAK,kBAAyC,SAArBxC,KAAK7B,MAAMc,MAAmB,QAAU,IAAM,SAC5H,uBAAGiD,UAAU,gBAAb,2C,GAPiBC,IAAMC,WAa7BK,E,uKAEE,OAAO,kBAAC,IAAD,CAAMP,UAAW,eAAsC,SAArBlC,KAAK7B,MAAMc,MAAmB,YAAc,IAAKqD,QAAS,CAAEC,IAAK,KACtG,kBAAC,IAAD,CAAeG,UAAW1C,KAAK7B,MAAMa,cAAgBgB,KAAK7B,MAAMV,YAAYoD,OAAS,GACrF,yBAAK8B,QAAS3C,KAAK7B,MAAMiB,SAAU8C,UAAU,yBAC7C,uBAAGA,UAAU,uBAAb,SACA,uBAAGA,UAAU,yBAAyBlC,KAAK7B,MAAMsC,SACjD,yBAAKmC,IAAI,QAAQV,UAAU,iCAAiCM,IAAI,2BAEhE,yBAAKG,QAAS3C,KAAK7B,MAAMiB,SAAU8C,UAAU,yBAC7C,uBAAGA,UAAU,qBAAqBlC,KAAK7B,MAAMV,oB,GAV9B0E,IAAMC,WAiB3BS,E,kDACF,WAAY1E,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACTgD,OAAQ,GACR0B,eAAe,EACfC,WAAY,GACZC,UAAW,GACXlE,aAAc,GACdC,cAAe,IAGnB,EAAKkE,cAAgB,EAAKA,cAAc5D,KAAnB,gBACrB,EAAK6D,cAAgB,EAAKA,cAAc7D,KAAnB,gBACrB,EAAK8D,WAAa,EAAKA,WAAW9D,KAAhB,gBAClB,EAAK+D,YAAc,EAAKA,YAAY/D,KAAjB,gBACnB,EAAKgE,UAAY,EAAKA,UAAUhE,KAAf,gBAhBF,E,+DAmBAyB,EAAWT,GAC1BL,KAAKqD,UAAUvC,EAAWT,GACvBL,KAAK5B,MAAMU,eAAiBuB,EAAUvB,cACrC1B,EAAOkG,QAAQC,SAASC,QAAQ,eAAgBxD,KAAK5B,MAAMU,cAE5DkB,KAAK5B,MAAMW,gBAAkBsB,EAAUtB,eACtC3B,EAAOkG,QAAQC,SAASC,QAAQ,gBAAiBxD,KAAK5B,MAAMW,eAEjC,KAA5BiB,KAAK5B,MAAMU,cAAuB2E,OAAOC,KAAK1D,KAAK7B,MAAMU,UAAUgC,OAAS,GAAKb,KAAK5B,MAAM4E,YAAc3C,EAAU2C,WACnHhD,KAAKiD,kB,sCAKT,IACI,IAAIU,EAAgB,GAChBC,EAAa,GACbZ,EAAYhD,KAAK7B,MAAMU,SAASmB,KAAK5B,MAAMU,cAC3C+E,EAAgBJ,OAAOC,KAAKV,GAChC,IAAI,IAAIc,KAAYD,EACZD,EAAWG,SAASf,EAAUc,GAAUxF,QACxCqF,EAAc1B,KAAKe,EAAUc,IAC7BF,EAAW3B,KAAKe,EAAUc,GAAV,OAIxB9D,KAAKF,SAAS,CAAEkD,UAAWW,IAC7B,MAAMK,O,0CAGS,IAAD,OAChB5G,EAAOkG,QAAQC,SAASU,QAAQ,gBAAgB9C,MAAK,SAAAtB,GAC3B,OAAnBA,EAAIE,KAAKmE,OACR,EAAKpE,SAAS,CAAEhB,aAAce,EAAIE,KAAKmE,WAG/C9G,EAAOkG,QAAQC,SAASU,QAAQ,iBAAiB9C,MAAK,SAAAtB,GAC5B,OAAnBA,EAAIE,KAAKmE,OACR,EAAKpE,SAAS,CAAEf,cAAec,EAAIE,KAAKmE,a,oCAKtC1D,GAAmB,IAAV2D,EAAS,uDAAJ,GACxBnE,KAAKF,SAAS,CAAEgD,cAAetC,EAASuC,WAAYoB,IACxC,YAATA,EACCnE,KAAKF,SAAS,CAAEhB,aAAc,KACf,aAATqF,GACNnE,KAAKF,SAAS,CAAEf,cAAe,O,iCAI5BD,GACPkB,KAAKF,SAAS,CAAEhB,aAAcA,M,kCAGtBC,GACRiB,KAAKF,SAAS,CAAEf,cAAeA,M,gCAGzB+B,EAAWT,GAAY,IAAD,OACxB+D,EAAUpE,KAAK7B,MAAMU,SAASmB,KAAK5B,MAAMU,cAC7C,QAAeuF,IAAZD,GAAqD,KAA5BpE,KAAK5B,MAAMU,aAC/BkB,KAAK5B,MAAM0E,eAA2C,YAA1B9C,KAAK5B,MAAM2E,YACvC/C,KAAKkD,eAAc,EAAM,eAE1B,CACH,IAAIY,EAAWM,EAAQE,MAAK,SAAAR,GAAQ,OAAIA,EAASxF,OAAS,EAAKF,MAAMW,sBACrDsF,IAAbP,EACK9D,KAAK5B,MAAM0E,eAA2C,aAA1B9C,KAAK5B,MAAM2E,aACvC/C,KAAKkD,eAAc,EAAM,YACzB9F,EAAOkG,QAAQC,SAASU,QAAQ,iBAAiB9C,MAAK,SAAAtB,GAC5B,OAAnBA,EAAIE,KAAKmE,OAAkBrE,EAAIE,KAAKmE,QAAU,EAAK9F,MAAMW,eACxD,EAAKe,SAAS,CAAEf,cAAec,EAAIE,KAAKmE,aAKjDlE,KAAK5B,MAAM0E,eACV9C,KAAKkD,eAAc,QAEPmB,IAAbP,GAA0B9D,KAAK5B,MAAMgD,SAAW0C,EAAS1C,SACxDpB,KAAKF,SAAS,CAAEsB,OAAQ0C,EAAS1C,SAC9BpB,KAAK7B,MAAMgB,SACVa,KAAK7B,MAAMuB,mB,+BAOrB,IAAD,OACL,OAAGM,KAAK7B,MAAMgB,QACH,yBAAK+C,UAAU,OAAM,kBAAC,EAAD,CAAOkC,QAASpE,KAAK5B,MAAMU,aAAcgF,SAAU9D,KAAK5B,MAAMW,cAAeqC,OAAQpB,KAAK5B,MAAMgD,OAAQnC,MAAOe,KAAK7B,MAAMc,MAAOC,UAAWc,KAAK7B,MAAMe,UAAWqF,aAAc,kBAAM,EAAKrB,eAAc,EAAM,YAAYsB,cAAe,kBAAM,EAAKtB,eAAc,EAAM,aAAa/D,QAASa,KAAK7B,MAAMgB,WAChUa,KAAK5B,MAAM0E,eAA2C,YAA1B9C,KAAK5B,MAAM2E,WACtC,yBAAKb,UAAU,OAAM,kBAAC,EAAD,CAAerD,SAAUmB,KAAK7B,MAAMU,SAAUsE,WAAYnD,KAAKmD,WAAYrE,aAAckB,KAAK5B,MAAMU,aAAcoE,cAAelD,KAAKkD,iBAC5JlD,KAAK5B,MAAM0E,eAA2C,aAA1B9C,KAAK5B,MAAM2E,WACtC,yBAAKb,UAAU,OAAM,kBAAC,EAAD,CAAgBc,UAAWhD,KAAK5B,MAAM4E,UAAWI,YAAapD,KAAKoD,YAAarE,cAAeiB,KAAK5B,MAAMW,cAAemE,cAAelD,KAAKkD,kBACnKlD,KAAK7B,MAAMgB,QACN,yBAAK+C,UAAU,OAAM,kBAAC,EAAD,CAAOkC,QAASpE,KAAK5B,MAAMU,aAAcgF,SAAU9D,KAAK5B,MAAMW,cAAeqC,OAAQpB,KAAK5B,MAAMgD,OAAQnC,MAAOe,KAAK7B,MAAMc,MAAOC,UAAWc,KAAK7B,MAAMe,UAAWqF,aAAc,kBAAM,EAAKrB,eAAc,EAAM,YAAYsB,cAAe,kBAAM,EAAKtB,eAAc,EAAM,aAAa/D,QAASa,KAAK7B,MAAMgB,gB,GAvH5TgD,IAAMC,WA8H1BqC,E,uKACQ,IAAD,OACL,OAAO,6BACH,uBAAGvC,UAAU,IAAb,uBACA,yBAAKA,UAAU,mBACduB,OAAOC,KAAK1D,KAAK7B,MAAMU,UAAU6F,KAAI,SAACN,GAAD,OACA,yBAAKlC,UAAU,gBAAgBS,QAAS,kBAAM,EAAKxE,MAAMgF,WAAWiB,EAAQO,cAC5E,2BAAIP,EAAQO,WAAWC,MAAM,KAAKC,iB,GAPxD1C,IAAMC,WAgB5B0C,E,uKACQ,IAAD,OACL,OAAO,6BACH,uBAAG5C,UAAU,IAAb,wBACA,yBAAKA,UAAU,mBACdlC,KAAK7B,MAAM6E,UAAU0B,KAAI,SAACZ,GAAD,OACA,yBAAK5B,UAAU,gBAAgBS,QAAS,kBAAM,EAAKxE,MAAMiF,YAAYU,EAASxF,QAC9E,2BAAIwF,EAASxF,gB,GAPtB6D,IAAMC,WAe7B2C,E,uKAGE,OADAnD,QAAQC,IAAI7B,KAAK7B,MAAMgB,SACnBa,KAAK7B,MAAMgB,QAWJ,yBAAK+C,UAAgC,SAArBlC,KAAK7B,MAAMc,MAAmB,YAAc,IAC/D,kBAAC,IAAD,CAAMiD,UAAU,mBAAmBI,QAAS,CAAEC,IAAM,IAAMyC,aAAchF,KAAKgF,cAC7E,kBAAC,gBAAD,CAAeC,MAA4B,SAArBjF,KAAK7B,MAAMc,MAAmB,OAAS,GAAIiG,eAAqC,SAArBlF,KAAK7B,MAAMc,MAAmB,OAAS,IACxH,uBAAGiD,UAAU,sBAAqB,kBAAC,IAAD,OAClC,uBAAGA,UAAU,yBAAwB,kBAAC,IAAD,OACrC,kBAAC,IAAD,CAAUiD,MAAO,IAAKjD,UAAU,uCAf7B,yBAAKA,UAAgC,SAArBlC,KAAK7B,MAAMc,MAAmB,YAAc,IAC/D,kBAAC,IAAD,CAAMiD,UAAU,mBAAmBI,QAAS,CAAEC,IAAM,IAAMyC,aAAchF,KAAKgF,cAC7E,uBAAG9C,UAAU,sBAAsBlC,KAAK7B,MAAMiG,QAAQQ,MAAM,KAAKC,MAAjE,IAAyE7E,KAAK7B,MAAMe,UAAY,kBAAC,IAAD,CAAckG,KAAK,OAAOH,MAAM,OAAOtC,QAAS3C,KAAK7B,MAAMoG,eAAmB,IAC9K,uBAAGrC,UAAU,yBAAyBlC,KAAK7B,MAAM2F,SAAjD,IAA4D9D,KAAK7B,MAAMe,UAAY,kBAAC,IAAD,CAAckG,KAAK,OAAOH,MAAM,OAAOtC,QAAS3C,KAAK7B,MAAMqG,gBAAoB,IAClK,yBAAKtC,UAAW,0CAA4ClC,KAAK7B,MAAMiD,QACvE,yBAAKc,UAAU,qBAAoB,kBAAC,EAAD,CAAYd,OAAQpB,KAAK7B,MAAMiD,UAAgB,uBAAGc,UAAU,qBAAqBlC,KAAK7B,MAAMiD,e,GAT3He,IAAMC,WA2BpBiD,E,uKAEE,MAAyB,aAAtBrF,KAAK7B,MAAMiD,OACH,kBAAC,IAAD,CAAcgE,KAAK,wBAAwBH,MAAM,SAC5B,WAAtBjF,KAAK7B,MAAMiD,OACV,kBAAC,IAAD,CAAcgE,KAAK,gBAAgBH,MAAM,SACpB,YAAtBjF,KAAK7B,MAAMiD,OACV,kBAAC,IAAD,CAAcgE,KAAK,uBAAuBH,MAAM,SAEhD,S,GATM9C,IAAMC,WAchBlE,ICxaKoH,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB9E,MAAK,SAAA+E,GACJA,EAAaC,gBAEdxE,OAAM,SAAAqC,GACLpC,QAAQoC,MAAMA,EAAMvD,c","file":"static/js/main.731477ab.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport MaterialIcon from 'material-icons-react';\nimport Tilt from 'react-tilt';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport ReactCardFlip from 'react-card-flip';\nimport mondaySdk from \"monday-sdk-js\";\nconst monday = mondaySdk();\n\nconst errorMessages = {\n    default: {text: \"Something went wrong, please check the logs\", explanation: \"\"},\n    unauthorized: {text: \"You are unauthorized. Please enter a valid CircleCI API token.\", explanation: \"Go to CircleCI and log in. Then click on your profile on the bottom left and go to \\\"Personal API Tokens\\\". Create a new API Token and enter it here at \\\"CircleCI API token\\\" in the settings.\"},\n    bad_request: {text: \"Error 400: Bad request\", explanation: \"\"},\n    no_org_slug: {text: \"Please enter your VCS provider. This can be GitHub or BitBucket\", explanation: \"\"},\n    form_not_filled: {text: \"Please fill in all fields\", explanation: \"Fill in all required fields to get started with this widget.\"},\n    no_results: {text: \"The server returned no results.\", explanation: \"Did you fill in all values correctly? A possible reason for this error could be that you entered the wrong VCS provider.\"},\n    workflow_not_found: {text: \"This workflow could not be found. Please check the name.\", explanation: \"\"},\n    project_not_found: {text: \"This project could not be found. Please check the name.\", explanation: \"\"}\n};\n\nconst possibleErrors = {\n    \"You must log in first.\": \"You are unauthorized. Please enter a valid CircleCI API token.\",\n    \"Organization not found\": \"Organization not found. Please check your organization name.\"\n};\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            settings: {},\n            name: \"\",\n            expected_results: 0,\n            fetched_results: 0,\n            errorMessageEnabled: false,\n            errorMessage: \"\",\n            errorExplanation: \"\",\n            welcomeMessageEnabled: false,\n            projects: {},\n            project_name: \"\",\n            workflow_name: \"\",\n            errorFlipped: false,\n            theme: \"light\",\n            edit_mode: false,\n            loading: true\n        };\n\n        this.flipCard = this.flipCard.bind(this);\n        this.selectProject = this.selectProject.bind(this);\n        this.saveSelectedProject = this.saveSelectedProject.bind(this);\n        this.selectWorkflow = this.selectWorkflow.bind(this);\n        this.saveSelectedWorkflow = this.saveSelectedWorkflow.bind(this);\n        this.stopLoading = this.stopLoading.bind(this);\n        this.displayMessage = this.displayMessage.bind(this);\n    }\n\n    componentDidMount() {\n        monday.listen(\"settings\", res => {\n            this.setState({settings: res.data, loading: true});\n        });\n        //monday.listen(\"context\", res => {\n        //    this.setState({theme: res.data.theme, edit_mode: res.data.editMode});\n        //});\n        this.interval = setInterval(() => {\n            if(this.state.theme === \"light\") {\n                this.setState({ theme: \"dark\" });\n           } else {\n                this.setState({ theme: \"light\" });\n            }\n        }, 3000);\n    }\n\n    flipCard(e) {\n        e.preventDefault();\n        this.setState(prevState => ({ errorFlipped: !prevState.errorFlipped }));\n    }\n\n    selectProject(selectedProject) {\n        if(this.state.selectedProject !== selectedProject) {\n            this.setState({ selectedProject: selectedProject });\n        } else {\n            this.setState({ selectedProject: \"\" });\n        }\n    }\n\n    saveSelectedProject(saveSelectedProject) {\n        this.setState({ saveSelectedProject: saveSelectedProject });\n    }\n\n    selectWorkflow(selectedWorkflow) {\n        if(this.state.selectedWorkflow !== selectedWorkflow) {\n            this.setState({ selectedWorkflow: selectedWorkflow });\n        } else {\n            this.setState({ selectedWorkflow: \"\" });\n        }\n    }\n\n    saveSelectedWorkflow(saveSelectedWorkflow) {\n        this.setState({ saveSelectedWorkflow: saveSelectedWorkflow });\n    }\n\n    displayMessage(enabled, message=\"default\", from_list=true) {\n        if(message === \"welcome\") {\n            this.setState({ welcomeMessageEnabled: enabled });\n        } else {\n            if(from_list) {\n                this.setState({errorMessageEnabled: enabled, errorMessage: errorMessages[message]['text'], errorExplanation: errorMessages[message]['explanation']});\n            } else {\n                this.setState({errorMessageEnabled: enabled, errorMessage: message, errorExplanation: \"\"});\n            }\n        }\n        if(!enabled) {\n            this.setState({ errorFlipped: false, welcomeMessageEnabled: enabled });\n        }\n    }\n\n    stopLoading() {\n        this.setState({ loading: false });\n    }\n\n    settingsComplete() {\n        if(this.state.settings.vcs_provider === null || this.state.settings.organization_name.length === 0) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if((this.state.expected_results !== prevState.expected_results || this.state.fetched_results !== prevState.fetched_results) && this.state.expected_results === this.state.fetched_results) {\n            this.stopLoading();\n        }\n        if(prevState.settings !== this.state.settings) {\n            if(this.settingsComplete()) {\n                fetch(\"https://circleci.com/api/v2/pipeline?circle-token=\"+this.state.settings.circleci_api_token+\"&org-slug=\"+this.state.settings.vcs_provider+\"/\"+this.state.settings.organization_name, {\n                    headers: {\n                        'Accept': 'application/json'\n                    }\n                })\n                    .then(res => {\n                        if(res.status === 401) {\n                            this.displayMessage(true, \"unauthorized\");\n                        }\n                        return res.json();\n                    })\n                    .then((data) => {\n                        if(data.message in possibleErrors) {\n                            this.displayMessage(true, possibleErrors[data.message], false);\n                        } else {\n                            if(data.items.length > 0) {\n                                var pipelines = data.items;\n                                this.setState({ expected_results: pipelines.length, projects: [] });\n                                for(var pipeline in pipelines) {\n                                    this.getWorkflow(pipelines[pipeline]);\n                                }\n                                this.displayMessage(false);\n                            } else {\n                                this.displayMessage(true, \"no_results\");\n                                if(!this.state.errorFlipped) {\n                                    setTimeout(() => {\n                                        this.setState({ errorFlipped: true });\n                                    }, 3000);\n                                }\n                            }\n                        }\n                    })\n                    .catch(console.log);\n            } else {\n                this.displayMessage(true, \"welcome\");\n            }\n        }\n    }\n\n    getWorkflow(pipeline) {\n        fetch(\"https://circleci.com/api/v2/pipeline/\"+pipeline.id+\"/workflow?circle-token=\"+this.state.settings.circleci_api_token+\"&org-slug=\"+this.state.settings.vcs_provider+\"/\"+this.state.settings.organization_name, {\n            headers: {\n                'Accept': 'application/json'\n            }\n        })\n            .then(res => {\n                return res.json();\n            })\n            .then((data) => {\n                var projects = this.state.projects;\n                if(!projects[pipeline.project_slug]) {\n                    projects[pipeline.project_slug] = [];\n                }\n                for(var item in data.items) {\n                    projects[pipeline.project_slug].push(data.items[item]);\n                }\n                this.setState({projects: projects, fetched_results: this.state.fetched_results + 1});\n            })\n            .catch(console.log);\n    }\n\n    render() {\n        if(this.state.welcomeMessageEnabled){\n            return <div className=\"App\">\n                <WelcomeMessage theme={this.state.theme} />\n                </div>;\n        } else if(this.state.errorMessageEnabled) {\n            return <div className=\"App\"><ErrorMessage message={this.state.errorMessage} explanation={this.state.errorExplanation} errorFlipped={this.state.errorFlipped} flipCard={this.flipCard} theme={this.state.theme}/></div>;\n        } else {\n            return <div className=\"app\"><StatusBadge settings={this.state.settings} project_name={this.state.project_name} workflow_name={this.state.workflow_name} projects={this.state.projects} theme={this.state.theme} edit_mode={this.state.edit_mode} loading={this.state.loading} stopLoading={this.stopLoading} /></div>;\n        }\n    };\n}\n\nclass WelcomeMessage extends React.Component {\n    render() {\n        return <Tilt className={this.props.theme === \"dark\" ? \"dark_mode\" : \"\"} options={{ max: 20 }}>\n            <div className=\"welcome_message_wrapper\">\n            <p className=\"welcome_title\">CircleCI widget</p>\n            <img className=\"circleci_logo\" src={\"/circleci_logo\" + (this.props.theme === \"dark\" ? \"_dark\" : \"\") + \".png\"} />\n            <img className=\"circleci_logo_second logo_animation\" src={\"/circleci_logo\" + (this.props.theme === \"dark\" ? \"_dark\" : \"\") + \".png\"} />\n            <p className=\"welcome_text\">Fill in all fields to get started</p>\n            </div>\n            </Tilt>;\n    }\n}\n\nclass ErrorMessage extends React.Component {\n    render() {\n        return <Tilt className={\"Tilt-error \" + (this.props.theme === \"dark\" ? \"dark_mode\" : \"\")} options={{ max: 20 }}>\n            <ReactCardFlip isFlipped={this.props.errorFlipped && this.props.explanation.length > 0}>\n            <div onClick={this.props.flipCard} className=\"error_message_wrapper\">\n            <p className=\"error_message_title\">Error</p>\n            <p className=\"error_message_message\">{this.props.message}</p>\n            <img alt=\"Error\" className=\"error_message_exclamation_mark\" src=\"/exclamation_mark.png\" />\n            </div>\n            <div onClick={this.props.flipCard} className=\"error_message_wrapper\">\n            <p className=\"error_explanation\">{this.props.explanation}</p>\n            </div>\n            </ReactCardFlip>\n            </Tilt>;\n    }\n}\n\nclass StatusBadge extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            status: \"\",\n            configEnabled: false,\n            configType: \"\",\n            workflows: [],\n            project_name: \"\",\n            workflow_name: \"\"\n        };\n\n        this.get_workflows = this.get_workflows.bind(this);\n        this.displayConfig = this.displayConfig.bind(this);\n        this.setProject = this.setProject.bind(this);\n        this.setWorkflow = this.setWorkflow.bind(this);\n        this.getStatus = this.getStatus.bind(this);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        this.getStatus(prevProps, prevState);\n        if(this.state.project_name !== prevState.project_name) {\n            monday.storage.instance.setItem('project_name', this.state.project_name);\n        }\n        if(this.state.workflow_name !== prevState.workflow_name) {\n            monday.storage.instance.setItem('workflow_name', this.state.workflow_name);\n        }\n        if(this.state.project_name !== \"\" && Object.keys(this.props.projects).length > 0 && this.state.workflows === prevState.workflows) {\n            this.get_workflows();\n        }\n    }\n\n    get_workflows() {\n        try {\n            var workflow_list = [];\n            var check_list = [];\n            var workflows = this.props.projects[this.state.project_name];\n            var workflow_keys = Object.keys(workflows);\n            for(var workflow in workflow_keys) {\n                if(!check_list.includes(workflows[workflow].name)) {\n                    workflow_list.push(workflows[workflow]);\n                    check_list.push(workflows[workflow]['name']);\n                }\n            }\n\n            this.setState({ workflows: workflow_list });\n        } catch(error) {}\n    }\n\n    componentDidMount() {\n        monday.storage.instance.getItem('project_name').then(res => {\n            if(res.data.value !== null) {\n                this.setState({ project_name: res.data.value });\n            }\n        });\n        monday.storage.instance.getItem('workflow_name').then(res => {\n            if(res.data.value !== null) {\n                this.setState({ workflow_name: res.data.value });\n            }\n        });\n    }\n\n    displayConfig(enabled, type=\"\") {\n        this.setState({ configEnabled: enabled, configType: type });\n        if(type === 'project') {\n            this.setState({ project_name: \"\" });\n        } else if(type === 'workflow') {\n            this.setState({ workflow_name: \"\" });\n        }\n    }\n\n    setProject(project_name) {\n        this.setState({ project_name: project_name });\n    }\n\n    setWorkflow(workflow_name) {\n        this.setState({ workflow_name: workflow_name });\n    }\n\n    getStatus(prevProps, prevState) {\n        var project = this.props.projects[this.state.project_name];\n        if(project === undefined || this.state.project_name === \"\") {\n            if(!this.state.configEnabled && this.state.configType !== \"project\") {\n                this.displayConfig(true, \"project\");\n            }\n        } else {\n            var workflow = project.find(workflow => workflow.name === this.state.workflow_name);\n            if(workflow === undefined) {\n                if(!this.state.configEnabled || this.state.configType !== \"workflow\") {\n                    this.displayConfig(true, \"workflow\");\n                    monday.storage.instance.getItem('workflow_name').then(res => {\n                        if(res.data.value !== null && res.data.value !== this.state.workflow_name) {\n                            this.setState({ workflow_name: res.data.value });\n                        }\n                    });\n                }\n            } else {\n                if(this.state.configEnabled) {\n                    this.displayConfig(false);\n                }\n                if(workflow !== undefined && this.state.status !== workflow.status) {\n                    this.setState({ status: workflow.status });\n                    if(this.props.loading) {\n                        this.props.stopLoading();\n                    };\n                }\n            }\n        }\n    }\n\n    render() {\n        if(this.props.loading) {\n            return <div className=\"App\"><Badge project={this.state.project_name} workflow={this.state.workflow_name} status={this.state.status} theme={this.props.theme} edit_mode={this.props.edit_mode} edit_project={() => this.displayConfig(true, \"project\")} edit_workflow={() => this.displayConfig(true, \"workflow\")} loading={this.props.loading} /></div>;\n        } else if(this.state.configEnabled && this.state.configType === \"project\") {\n            return <div className=\"App\"><ProjectConfig projects={this.props.projects} setProject={this.setProject} project_name={this.state.project_name} displayConfig={this.displayConfig} /></div>;\n        } else if(this.state.configEnabled && this.state.configType === \"workflow\") {\n            return <div className=\"App\"><WorkflowConfig workflows={this.state.workflows} setWorkflow={this.setWorkflow} workflow_name={this.state.workflow_name} displayConfig={this.displayConfig} /></div>;\n        } else if(this.props.loading) {\n                return <div className=\"App\"><Badge project={this.state.project_name} workflow={this.state.workflow_name} status={this.state.status} theme={this.props.theme} edit_mode={this.props.edit_mode} edit_project={() => this.displayConfig(true, \"project\")} edit_workflow={() => this.displayConfig(true, \"workflow\")} loading={this.props.loading} /></div>;\n        } else {\n            return <div className=\"App\"><Badge project={this.state.project_name} workflow={this.state.workflow_name} status={this.state.status} theme={this.props.theme} edit_mode={this.props.edit_mode} edit_project={() => this.displayConfig(true, \"project\")} edit_workflow={() => this.displayConfig(true, \"workflow\")} loading={this.props.loading} /></div>;\n        }\n    }\n}\n\nclass ProjectConfig extends React.Component {\n    render() {\n        return <div>\n            <p className=\"\">Select your project</p>\n            <div className=\"project_wrapper\">\n            {Object.keys(this.props.projects).map((project) =>\n                                                  <div className=\"project_block\" onClick={() => this.props.setProject(project.toString())}>\n                                                  <p>{project.toString().split(\"/\").pop()}</p>\n                                                  </div>\n                                                 )}\n        </div>\n            </div>;\n    }\n\n}\n\nclass WorkflowConfig extends React.Component {\n    render() {\n        return <div>\n            <p className=\"\">Select your workflow</p>\n            <div className=\"project_wrapper\">\n            {this.props.workflows.map((workflow) =>\n                                      <div className=\"project_block\" onClick={() => this.props.setWorkflow(workflow.name)}>\n                                      <p>{workflow.name}</p>\n                                                  </div>\n                                                 )}\n        </div>\n            </div>;\n    }\n}\n\nclass Badge extends React.Component {\n    render() {\n        console.log(this.props.loading);\n        if(!this.props.loading) {\n            return <div className={this.props.theme === \"dark\" ? \"dark_mode\" : \"\"}>\n                <Tilt className=\"Tilt Tilt_status\" options={{ max : 25 }} onMouseLeave={this.onMouseLeave}>\n                <p className=\"status_badge_title\">{this.props.project.split(\"/\").pop()} {this.props.edit_mode ? <MaterialIcon icon='edit' color='#000' onClick={this.props.edit_project} /> : \"\"}</p>\n                <p className=\"status_badge_subtitle\">{this.props.workflow} {this.props.edit_mode ? <MaterialIcon icon='edit' color='#000' onClick={this.props.edit_workflow} /> : \"\"}</p>\n                <div className={\"Tilt-inner status_badge_wrapper status_\" + this.props.status}>\n                <div className=\"status_badge_icon\"><StatusIcon status={this.props.status} /></div><p className=\"status_badge_text\">{this.props.status}</p>\n                </div>\n                </Tilt>\n            </div>;\n        } else {\n            return <div className={this.props.theme === \"dark\" ? \"dark_mode\" : \"\"}>\n                <Tilt className=\"Tilt Tilt_status\" options={{ max : 25 }} onMouseLeave={this.onMouseLeave}>\n                <SkeletonTheme color={this.props.theme === \"dark\" ? \"#444\" : \"\"} highlightColor={this.props.theme === \"dark\" ? \"#555\" : \"\"}>\n                <p className=\"status_badge_title\"><Skeleton /></p>\n                <p className=\"status_badge_subtitle\"><Skeleton /></p>\n                <Skeleton width={100} className=\"Tilt-inner status_badge_wrapper\" />\n                </SkeletonTheme>\n                </Tilt>\n                </div>;\n        }\n    }\n}\n\nclass StatusIcon extends React.Component {\n    render() {\n        if(this.props.status === 'canceled') {\n            return <MaterialIcon icon='remove_circle_outline' color='#FFF' />;\n        } else if(this.props.status === 'failed') {\n            return <MaterialIcon icon='error_outline' color='#FFF' />;\n        } else if(this.props.status === 'success') {\n            return <MaterialIcon icon='check_circle_outline' color='#FFF' />;\n        } else {\n            return null;\n        }\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}